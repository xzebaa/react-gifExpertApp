{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","getGift","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","alt","src","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","GiftExpertApp","props","ReactDOM","render","document","getElementById"],"mappings":"2MAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBhD,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAMC,iBAEHJ,EAAWK,OAAOC,OAAQ,IAG7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAE9CN,EAAc,MAId,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SApBkB,SAACP,GACvBF,EAAcE,EAAMQ,OAAOF,a,+BCRhBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAGfC,EAHe,iDAGiCC,UAAUH,GAH3C,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,qBAXF,kBAgBdN,GAhBc,4CAAH,sDCCTO,EAAc,SAAC,GAAsB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACvC,OACE,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAOM,IAAKhB,EAAIA,MAC9B,kCAAMU,SCDGO,EAAU,SAAC,GAAiB,IAAfnB,EAAc,EAAdA,SAAc,ECFZ,SAAEA,GAAc,IAAD,EACfd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH8B,mBAClCC,EADkC,KAC3BC,EAD2B,KAiBzC,OAXAC,qBAAU,WACXxB,EAAQC,GAAUwB,MAAM,SAAAd,GAAUY,EAAS,CAACf,KAAMG,EAAKU,SAAS,SAC5D,CAACpB,IASGqB,EDb0BI,CAAazB,GAAhCa,EAFwB,EAE9BN,KAAca,EAFgB,EAEhBA,QAItB,OACE,qCACE,qBAAIJ,UAAU,oCAAd,cAAoDhB,KAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEMH,EAAOJ,KAAK,SAAAC,GAAG,OACf,cAAC,EAAD,eAEMA,GADCA,EAAIC,aEMRe,EArBO,SAACC,GAAW,IAAD,EAEKzC,mBAAS,CAAE,gBAFhB,mBAExBQ,EAFwB,KAEZT,EAFY,KAI/B,OAAO,qCACL,4CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEIS,EAAWe,KAAK,SAAAT,GACd,OAAO,cAAC,EAAD,CAEGA,SAAUA,GADLA,YCXzB4B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.812ab96e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({ setCategories }) => {\n\n  const [inputValue, setInputValue] = useState('')\n\n  const onChangeHandler = (event) => {\n    setInputValue(event.target.value)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if(inputValue.trim().length <2) return;\n\n\n    setCategories((categories) => [inputValue, ...categories]);\n\n    setInputValue('')\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type='text'\n        value={inputValue}\n        onChange={onChangeHandler}\n      />\n    </form>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired\n}","\n  export const getGift = async ( category ) => {\n\n    // IU6KgrLSDw9QiYM2GgbZfsqwuJO2t0MY\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=IU6KgrLSDw9QiYM2GgbZfsqwuJO2t0MY`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n  \n    const gifs = data.map( img => {\n        return {\n          id: img.id,\n          title: img.title,\n          url: img.images?.downsized_medium\n        }\n      }\n    );\n  \n    return gifs;\n  }","import React from 'react'\n\nexport const GifGridItem = ({ id, title, url}) => {\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n        <img alt={title} src={url.url}/>\n    <p > {title}</p> \n    </div>\n  )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n// import { getGift } from './../helpers/getGifs';    \n\nexport const GifGrid = ({ category}) => {\n\n  const { data: images, loading} = useFetchGifs(category);\n\n\n\n  return (\n    <>\n      <h3 className='animate__animated animate__fadeIn'> {category}</h3>\n      { loading && <p className='animate__animated animate__flash'>Loading</p>}\n      <div className='card-grip'>\n          {\n            images.map( img => \n            <GifGridItem \n              key={img.id}\n              {...img}\n            />)\n          }\n      </div>\n    </>\n  )\n}\n\n\n","import { useState, useEffect } from \"react\";\nimport { getGift } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = ( category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  });\n  \n  useEffect(() => {\n\tgetGift(category).then( img =>  { setState({data: img, loading: false})})\n  }, [category]);\n\n//   setTimeout(() => {\n//     setState({\n//       data: [1, 2, 3],\n//       loading: false\n//     });\n//   }, 1500);\n\n  return state;\n};\n\n  // const [images, setImages] = useState([])\n\n  // useEffect( () => {\n\n  //   getGift(category).then( setImages )\n    \n  // }, [category]);","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\nconst GiftExpertApp = (props) => {\n\n  const [categories, setCategories] = useState([ 'los simpson']);\n\n  return <> \n    <h2>GiftExpert</h2>\n    <AddCategory setCategories={setCategories} />\n    <hr />\n    <ol>\n      {\n        categories.map( category => {\n          return <GifGrid \n                    key={category} \n                    category={category}\n                  />\n        })\n      }\n    </ol>\n  </>\n};\n\nexport default GiftExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}